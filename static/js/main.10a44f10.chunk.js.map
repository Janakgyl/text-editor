{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","home","onClick","togglemode","role","htmlfor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","style","backgroundColor","color","rows","newtext","toUpperCase","showalert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","class","word","charAt","slice","capitalize","message","defaultProps","App","setmode","_useState3","_useState4","setalert","msg","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"mMAOe,SAASA,EAAOC,GAC7B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kCAAAC,OAAoCL,EAAMM,KAAI,QAAAD,OAAOL,EAAMM,OACvEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAeG,KAAK,KAAKP,EAAMQ,OAC/CP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBK,KAAK,SAASC,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAC1Lb,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BW,GAAG,0BAC3Cd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBY,eAAa,OAAOT,KAAK,KAAKP,EAAMiB,OAErEhB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWG,KAAK,KAAG,WAMpCN,EAAAC,EAAAC,cAAA,OAAKC,UAAS,+BAAAC,OAA8C,UAAbL,EAAMM,KAAe,OAAO,UACvEL,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBK,KAAK,WAAWS,QAASlB,EAAMmB,WAAYC,KAAK,SAASL,GAAG,2BAChGd,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBiB,QAAQ,0BAAuC,UAAbrB,EAAMM,KAAe,mBAAmB,yBC3B7G,SAASgB,EAAStB,GAAO,IAAAuB,EAChBC,mBAAS,mBAAkBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAzCK,EAAIH,EAAA,GAACI,EAAOJ,EAAA,GA+CpB,OACCxB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4B,SAAA,KACA7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACdH,EAAAC,EAAAC,cAAA,UAAKH,EAAM+B,SACX9B,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAgB4B,MAAOJ,EAAMK,SAjD7B,SAACC,GACjBL,EAAQK,EAAMC,OAAOH,QAgDiDI,MAAO,CAACC,gBAA6B,UAAbrC,EAAMM,KAAe,QAAQ,OAAOgC,MAAmB,UAAbtC,EAAMM,KAAe,QAAQ,SAAUS,GAAG,QAAQwB,KAAK,OACnMtC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4Bc,QA7C1B,WAEhB,IAAIsB,EAAQZ,EAAKa,cACjBZ,EAAQW,GACRxC,EAAM0C,UAAU,4BAA4B,aAyCqB,uBACrEzC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2BAA2Bc,QAtCzB,WAEhB,IAAIsB,EAAQZ,EAAKe,cACjBd,EAAQW,GACRxC,EAAM0C,UAAU,4BAA4B,aAkCoB,uBACpEzC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8Bc,QA7BjC,WAEf,IAAIU,EAAKgB,SAASC,eAAe,SACjCjB,EAAKkB,SACLC,UAAUC,UAAUC,UAAUrB,EAAKI,OACnChC,EAAM0C,UAAU,cAAc,aAwBoC,aAClEzC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4Bc,QArBvB,WACrB,IAAIsB,EAAQZ,EAAKsB,MAAM,QACvBrB,EAAQW,EAAQW,KAAK,MACrBnD,EAAM0C,UAAU,gCAAgC,aAkBsB,sBACxEzC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4Bc,QAf1B,WAChBW,EAAQ,IACR7B,EAAM0C,UAAU,2BAA2B,YAasB,mBAIvEzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,sBAAcyB,EAAKsB,MAAM,KAAKE,OAAO,EAAExB,EAAKsB,MAAM,KAAKE,OAAO,EAAC,cAAaxB,EAAKwB,OAAM,+BACvFnD,EAAAC,EAAAC,cAAA,0BAAkB,IAAMyB,EAAKsB,MAAM,KAAKE,OAAM,yBAC9CnD,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAIyB,EAAKwB,OAAO,EAAExB,EAAK,4DClEZ,SAASyB,EAAMrD,GAS5B,OACEA,EAAMsD,OAASrD,EAAAC,EAAAC,cAAA,OAAKoD,MAAK,eAAAlD,OAAiBL,EAAMsD,MAAM7C,KAAI,gCAAgCW,KAAK,SAC/FnB,EAAAC,EAAAC,cAAA,cARiB,SAACqD,GACd,IAAI5B,EAAK4B,EAAKb,cACd,OAAOf,EAAK6B,OAAO,GAAGhB,cAAcb,EAAK8B,MAAM,GAM1CC,CAAW3D,EAAMsD,MAAM7C,OAAe,KAAGT,EAAMsD,MAAMM,SF4BlE7D,EAAO8D,aAAe,CACpBrD,MAAO,UGsCMsD,MAnEf,WAAe,IAAAvC,EACWC,mBAAS,SAAQC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAlCjB,EAAImB,EAAA,GAAEsC,EAAOtC,EAAA,GAAAuC,EACMxC,mBAAS,MAAKyC,EAAAvC,OAAAC,EAAA,EAAAD,CAAAsC,EAAA,GAAjCV,EAAKW,EAAA,GAAEC,EAAQD,EAAA,GAEhBvB,EAAY,SAACyB,EAAK1D,GACtByD,EAAS,CACPN,QAASO,EACT1D,KAAMA,IAGR2D,WAAW,WACTF,EAAS,OACR,OAgCL,OACEjE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4B,SAAA,KAEI7B,EAAAC,EAAAC,cAACJ,EAAM,CAACS,MAAM,cAAcS,KAAK,OAAOX,KAAMA,EAAMa,WAhCvC,WACJ,UAATb,GACFyD,EAAQ,QACRnB,SAASyB,KAAKjC,MAAMC,gBAAkB,OACtCO,SAASyB,KAAKjC,MAAME,MAAQ,QAC5BI,EAAU,6BAA8B,WAExCE,SAASpC,MAAQ,yBAajBuD,EAAQ,SACRnB,SAASyB,KAAKjC,MAAMC,gBAAkB,QACtCO,SAASyB,KAAKjC,MAAME,MAAQ,QAC5BI,EAAU,8BAA+B,WAEzCE,SAASpC,MAAQ,4BAQfP,EAAAC,EAAAC,cAACkD,EAAK,CAACC,MAAOA,IACdrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAKRH,EAAAC,EAAAC,cAACmB,EAAQ,CAACS,QAAQ,6BAA6BzB,KAAMA,EAAMoC,UAAWA,OCvDtE4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWxC,SAASC,eAAe,SACpDwC,OACHpF,EAAAC,EAAAC,cAACF,EAAAC,EAAMoF,WAAU,KACfrF,EAAAC,EAAAC,cAACoF,EAAG,QAORjB","file":"static/js/main.10a44f10.chunk.js","sourcesContent":["import React from 'react' //rfc\r\n// import {Link} from \"react-router-dom\";\r\n\r\n// import PropTypes from 'prop-types' //impt\r\n\r\n//use Link instead of <a> and to instead of href\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <href className=\"navbar-brand\" href=\"#\">{props.title}</href>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.home}</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">About</a>\r\n            </li>\r\n\r\n          </ul>\r\n         \r\n\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" type=\"checkbox\" onClick={props.togglemode} role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">{props.mode==='light'?\"Enable Dark Mode\":\"Enable Light Mode\"}</label>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Disney\"\r\n}\r\n\r\n\r\n\r\n\r\n","import React,{useState}from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const[text,setText]=useState(\"enter your text\");\r\n\r\n    const ChangeHandler=(event)=>{\r\n        setText(event.target.value)\r\n\r\n    }\r\n\r\n    const ChangeToUpper=()=>{\r\n\r\n        let newtext=text.toUpperCase();\r\n        setText(newtext)  //text can be updated only by using settext not manually like text=\"can not be changed\"\r\n        props.showalert(\"Text changed to Uppercase\",\"success\")\r\n\r\n    }\r\n\r\n    const ChangeToLower=()=>{\r\n\r\n        let newtext=text.toLowerCase();\r\n        setText(newtext)\r\n        props.showalert(\"Text changed to Lowercase\",\"success\")\r\n\r\n\r\n\r\n    }\r\n\r\n    const CopyText=()=>{\r\n      \r\n    var text=document.getElementById(\"mybox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showalert(\"Text copied\",\"success\")\r\n\r\n    }\r\n\r\n    const handleExtraSpace=()=>{\r\n      let newtext=text.split(/[ ]+/);\r\n      setText(newtext.join(\" \"));\r\n      props.showalert(\"Extra spaces has been removed\",\"success\")\r\n      \r\n    }\r\n\r\n    const ClearTextarea=()=>{\r\n        setText('')\r\n        props.showalert(\"Textarea set to be empty\",\"danger\")\r\n    }\r\n\r\n    \r\n  return (\r\n   <>\r\n   <div className=\"mb-3\" >\r\n    <h1>{props.heading}</h1>\r\n    <textarea className=\"form-control\"  value={text} onChange={ChangeHandler} style={{backgroundColor:props.mode==='light'?'white':'grey',color:props.mode==='light'?'black':'white'}} id=\"mybox\" rows=\"10\"></textarea>\r\n    <button className='btn btn-success my-2 mx-1' onClick={ChangeToUpper}>Change to Uppercase</button>\r\n    <button className='btn btn-danger my-2 mx-1' onClick={ChangeToLower}>Change to Lowercase</button>\r\n    <button className='btn btn-secondary my-2 mx-1' onClick={CopyText}>Copy Text</button>\r\n    <button className='btn btn-warning my-2 mx-1' onClick={handleExtraSpace}>Remove Extra space</button>\r\n    <button className='btn btn-primary my-2 mx-1' onClick={ClearTextarea}>Clear textarea</button>\r\n  \r\n  </div>\r\n\r\n  <div className=\"container\">\r\n    <h1>Your Text Summary</h1>\r\n    <h4>You have {text.split(\" \").length>0?text.split(\" \").length:0} words and {text.length} characters in your textbox</h4>\r\n    <p>You will take {0.08* text.split(\" \").length} minutes to read this</p>\r\n    <h2>Preview</h2>\r\n    <p>{text.length>0?text:\"<---Enter something in textarea to preview here--->\"}</p>\r\n  </div>\r\n\r\n \r\n   </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    //To capitalize first letter of word\r\n    const capitalize=(word)=>{\r\n        let text=word.toLowerCase();\r\n        return text.charAt(0).toUpperCase()+text.slice(1)\r\n    }\r\n\r\n\r\n  return (\r\n    props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{capitalize(props.alert.type)}</strong>: {props.alert.message}\r\n    \r\n  </div>\r\n  )\r\n}\r\n","import './App.css';\n// import About from './components/About';\n// import React from 'react';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {BrowserRouter as Router,\n// Route,Routes} from \"react-router-dom\";\n\n\n//In pace of switch we need to write <Routes></Routes>\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setalert] = useState(null);\n\n  const showalert = (msg, type) => {\n    setalert({\n      message: msg,\n      type: type\n    })\n\n    setTimeout(() => {\n      setalert(null)\n    }, 1200);\n  }\n\n  const togglemode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = 'grey'\n      document.body.style.color = 'white'\n      showalert(\"Dark mode has been enabled\", \"success\");\n      //changing title dynamically\n      document.title = \"TextUtiles-Dark Mode\"\n\n      /*\n         //Pretending to be a bug in your site\n          setInterval(()=>{\n          document.title=\"New Title\"\n          },2000)\n          setInterval(()=>{\n          document.title=\"old Title\"\n          },1500)\n     */\n    }\n    else {\n      setmode('light')\n      document.body.style.backgroundColor = 'white'\n      document.body.style.color = 'black'\n      showalert(\"Light mode has been enabled\", \"success\");\n      //changing title dynamically\n      document.title = \"TextUtiles-Light Mode\"\n\n    }\n  }\n  return (\n    <>\n        {/* <Router> */}\n        <Navbar title=\"JANAK GOYAL\" home=\"Home\" mode={mode} togglemode={togglemode} />\n        <Alert alert={alert} />\n        <div className=\"container\">\n       \n        {/* <Routes> */}\n          {/* <Route exact path=\"/about\" element={<About/>}/> */}\n            {/* <Route exact path=\"/\" element={<Textform heading=\"Enter your text to analyze\" mode={mode} showalert={showalert} />}/> */}\n               <Textform heading=\"Enter your text to analyze\" mode={mode} showalert={showalert} />\n            \n         {/* </Routes> */}\n          {/* <About/> */}\n\n\n        </div>\n\n        {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}